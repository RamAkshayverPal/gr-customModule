id: customModule_permutation
label: permutation
category: '[customModule]'

templates:
  imports: from gnuradio import customModule
  make: customModule.permutation(${K}, ${TABLE}, ${SYMS_PER_BLOCK}, ${NBYTES})
  callbacks:
    - set_K(${interleaver_size})
    - set_TABLE(${table})
    - set_SYMS_PER_BLOCK(${syms_per_block})
#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
-   id: type
    label: Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: interleaver_size
    label: Interleaver Size
    dtype: int
-   id: table
    label: Table
    dtype: int_vector
-   id: syms_per_block
    label: Symbols per Block
    dtype: int
-   id: vlen
    label: Vector Length
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }

inputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }

- domain: message
  id: TapsIn
  optional: true
  
outputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }

asserts:
- ${ vlen > 0 }
file_format: 1
